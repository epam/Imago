IF(MSVC)
	set(SYSTEM_NAME "Win")
	if (NOT SUBSYSTEM_NAME)
		IF(CMAKE_SIZEOF_VOID_P MATCHES 8)
			set(SUBSYSTEM_NAME "x64")
		ELSE()
			set(SUBSYSTEM_NAME "x86")
		ENDIF()
	endif()
	SET(SYSTEM_DL_EXTENSION ".dll")
ELSEIF(APPLE)
	set(SYSTEM_NAME "Mac")
	if (NOT SUBSYSTEM_NAME)
		EXEC_PROGRAM(uname ARGS -v  OUTPUT_VARIABLE DARWIN_VERSION)
		STRING(REGEX MATCH "[0-9]+" DARWIN_VERSION ${DARWIN_VERSION})
		IF (DARWIN_VERSION MATCHES 8)
			set(SUBSYSTEM_NAME "10.4")
		ELSEIF(DARWIN_VERSION MATCHES 9)
			set(SUBSYSTEM_NAME "10.5")
		ELSEIF(DARWIN_VERSION MATCHES 10)
			set(SUBSYSTEM_NAME "10.6")
		ELSEIF(DARWIN_VERSION MATCHES 11)
			set(SUBSYSTEM_NAME "10.7")
		ELSEIF(DARWIN_VERSION MATCHES 12)
			set(SUBSYSTEM_NAME "10.8")
		ELSE()
			message(FATAL_ERROR "Unsupported DARWIN_VERSION: ${DARWIN_VERSION}")
		ENDIF()
	endif()	
	SET(SYSTEM_DL_EXTENSION ".dylib")
ELSEIF(UNIX)
	set(SYSTEM_NAME "Linux")
	if (NOT SUBSYSTEM_NAME)
		IF(CMAKE_SIZEOF_VOID_P MATCHES 8)
			set(SUBSYSTEM_NAME "x64")
		ELSE()
			set(SUBSYSTEM_NAME "x86")
		ENDIF()
	endif()
	SET(SYSTEM_DL_EXTENSION ".so")
ELSE()
   MESSAGE(FATAL_ERROR "Unsupported system")
ENDIF()